import { NextRequest, NextResponse } from 'next/server'
import { supabase } from '@/lib/supabase'

export async function GET() {
  try {
    console.log('üîç Testando conex√£o com banco de dados...')
    
    // Testar conex√£o b√°sica
    const { data: testData, error: testError } = await supabase
      .from('users')
      .select('count')
      .limit(1)
    
    if (testError) {
      console.error('‚ùå Erro na conex√£o:', testError)
      return NextResponse.json({ 
        error: 'Erro na conex√£o com banco', 
        details: testError 
      }, { status: 500 })
    }

    console.log('‚úÖ Conex√£o estabelecida')

    // Buscar todos os usu√°rios
    const { data: allUsers, error: usersError } = await supabase
      .from('users')
      .select('id, email, subscription_plan, subscription_status, credits_remaining')
      .limit(10)
    
    if (usersError) {
      console.error('‚ùå Erro ao buscar usu√°rios:', usersError)
      return NextResponse.json({ 
        error: 'Erro ao buscar usu√°rios', 
        details: usersError 
      }, { status: 500 })
    }

    console.log('üë• Usu√°rios encontrados:', allUsers?.length || 0)
    
    // Buscar especificamente o admin2@admin2.com
    const { data: adminUser, error: adminError } = await supabase
      .from('users')
      .select('*')
      .eq('email', 'admin2@admin2.com')
    
    console.log('üîç Busca por admin2@admin2.com:', adminUser)
    
    return NextResponse.json({
      success: true,
      totalUsers: allUsers?.length || 0,
      users: allUsers,
      adminUser: adminUser,
      adminError: adminError
    })

  } catch (error) {
    console.error('‚ùå Erro geral:', error)
    return NextResponse.json({ 
      error: 'Erro interno do servidor',
      details: error instanceof Error ? error.message : 'Erro desconhecido'
    }, { status: 500 })
  }
} 